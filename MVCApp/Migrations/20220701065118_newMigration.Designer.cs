// <auto-generated />
using MVCApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MVCApp.Migrations
{
    [DbContext(typeof(MVCAppContext))]
    [Migration("20220701065118_newMigration")]
    partial class newMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MVCApp.Models.CommercialPhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DDD")
                        .HasColumnType("int");

                    b.Property<int>("DDI")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CommercialPhone");
                });

            modelBuilder.Entity("MVCApp.Models.Email", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Email");
                });

            modelBuilder.Entity("MVCApp.Models.PersonalPhone", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("DDD")
                        .HasColumnType("int");

                    b.Property<int>("DDI")
                        .HasColumnType("int");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PersonalPhone");
                });

            modelBuilder.Entity("MVCApp.Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommercialPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Company")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PersonalPhoneId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CommercialPhoneId");

                    b.HasIndex("PersonalPhoneId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("MVCApp.Models.Email", b =>
                {
                    b.HasOne("MVCApp.Models.User", null)
                        .WithMany("Email")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("MVCApp.Models.User", b =>
                {
                    b.HasOne("MVCApp.Models.CommercialPhone", "CommercialPhone")
                        .WithMany()
                        .HasForeignKey("CommercialPhoneId");

                    b.HasOne("MVCApp.Models.PersonalPhone", "PersonalPhone")
                        .WithMany()
                        .HasForeignKey("PersonalPhoneId");

                    b.Navigation("CommercialPhone");

                    b.Navigation("PersonalPhone");
                });

            modelBuilder.Entity("MVCApp.Models.User", b =>
                {
                    b.Navigation("Email");
                });
#pragma warning restore 612, 618
        }
    }
}
